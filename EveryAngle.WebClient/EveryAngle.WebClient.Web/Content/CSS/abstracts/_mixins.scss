// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
    $src: null;

    $extmods: ( eot: "?", svg: "#" + str-replace($name, " ", "_") );

    $formats: ( otf: "opentype", ttf: "truetype" );

    @each $ext in $exts {
        $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
        $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
        $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }

    @font-face {
        font-family: quote($name);
        font-style: $style;
        font-weight: $weight;
        font-display: swap;
        src: $src;
    }
}

// =============================================================================
// placeholder
// =============================================================================
@mixin placeholder {
    &::-webkit-input-placeholder {
        @content
    }

    &:-moz-placeholder {
        opacity: 1;
        @content
    }

    &::-moz-placeholder {
        opacity: 1;
        @content
    }

    &:-ms-input-placeholder {
        @content
    }

    &.placeholder {
        @content
    }
}

// =============================================================================
// screen
// =============================================================================
@mixin respond-to($media) {
    @if $media == medium {
        @media (max-width: 979px) {
            @content;
        }
    }

    @if $media == large {
        @media (max-width: 1139px) {
            @content;
        }
    }
}

@mixin ellipsis {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

@mixin flex-center {
    display: flex;
    align-items: center;
}

@mixin inline-flex-center {
    display: inline-flex;
    align-items: center;
}

@mixin no-select {
    -webkit-tap-highlight-color: transparent;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

@mixin calc-vh($property, $decrease) {
    #{$property}: calc(100vh - #{$decrease}); /* fallback for none support browsers */
    #{$property}: calc(var(--vh, 1vh) * 100 - #{$decrease});
}

// make a custom border
// $style - border style, can be (dashed|solid)
// $color - border color
// $size -  border size
// $space - spacing for the dashed style
@mixin border-custom($style, $color, $size: 1px, $space: 10px) {
    $color2: transparent;
    @if $style == solid {
        $color2: $color;
    }

    background-image: linear-gradient(to right, #{$color} 50%, #{$color2} 50%), linear-gradient(to right, #{$color} 50%, #{$color2} 50%), linear-gradient(to bottom, #{$color} 50%, #{$color2} 50%), linear-gradient(to bottom, #{$color} 50%, #{$color2} 50%);
    background-position: left top, left bottom, left top, right top;
    background-repeat: repeat-x, repeat-x, repeat-y, repeat-y;
    background-size: #{$space} #{$size}, #{$space} #{$size}, #{$size} #{$space}, #{$size} #{$space};
}