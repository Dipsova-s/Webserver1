var dashboardDetailBodyHtmlTemplate = function () {
    return [
        '<ul class="popupTabMenu" id="DashboardTabs">',
            '<li class="general" onclick="dashboardDetailsHandler.TabClick(dashboardDetailsHandler.TAB.GENERAL);"><a>' + Localization.General + '</a></li>',
            '<li class="description" onclick="dashboardDetailsHandler.TabClick(dashboardDetailsHandler.TAB.DESCRIPTION);"><a>' + Localization.Description + '</a></li>',
            '<li class="definition" onclick="dashboardDetailsHandler.TabClick(dashboardDetailsHandler.TAB.DEFINITION);"><a>' + Localization.Definition + '</a></li>',
            '<li class="fieldsfilters" onclick="dashboardDetailsHandler.TabClick(dashboardDetailsHandler.TAB.FIELDSFILTERS);"><a>Fields and Filters</a></li>',
            '<li class="publishing" onclick="dashboardDetailsHandler.TabClick(dashboardDetailsHandler.TAB.PUBLISHING);"><a>' + Localization.Publishing + '</a></li>',
            '<li class="statistic" onclick="dashboardDetailsHandler.TabClick(dashboardDetailsHandler.TAB.STATISTIC);" data-bind="visible: !Model.IsTemporaryDashboard()"><a>' + Localization.Statistics + '</a></li>',
        '</ul>',
        '<div class="popupTabPanel" id="DashboardArea">',
            '<div class="generalArea">',
                '<h2 data-bind="text: Localization.General">' + Localization.General + '</h2>',
                '<div class="row">',
                    '<div class="field" data-bind="text: Localization.Model">' + Localization.Model + '</div>',
                    '<div class="input eaDropdown eaDropdownSize40" id="SystemModels"></div>',
                '</div>',
                '<div class="row">',
                    '<div class="field" data-bind="text: Localization.BusinessProcesses">' + Localization.BusinessProcesses + '</div>',
                    '<div class="input" id="DashboardBusinessProcesses"></div>',
                '</div>',

                '<!-- ko if: dashboardHandler.CanEditId() -->',
                '<div class="row">',
                    '<div class="field">' + Localization.DashboardId + '</div>',
                    '<div class="input">',
                        '<input id="AngleId" required data-required-msg="Required" class="eaText eaTextSize40" data-bind="value: Model.Data().id, enable: Model.CanUpdateDashboard(\'id\')" maxlength="50" />',
                    '</div>',
                '</div>',
                '<!-- /ko -->',

                '<div class="row">',
                    '<div class="field"></div>',
                    '<div class="input">',
                        '<label>',
                            '<input type="checkbox" id="DashboadAtLogin" data-bind="checked: Model.Data().user_specific.execute_on_login, enable: dashboardModel.Data().authorizations.update_user_specific" />',
                            '<span class="label labelDashboardExecuteAtLogin">' + Localization.ExecuteAtLogin + '</span>',
                        '</label>',
                    '</div>',
                '</div>',
            '</div>',

            '<div class="descriptionArea"></div>',

            '<div class="fieldsfiltersArea">',
                '<h2>Fields and Filters</h2>',
                '<div class="DefInfo">',
                    '<label>Applied fields and filters</label>',
                    '<div id="FieldsFiltersWrapper"></div>',
                '</div>',
                '<div class="filterButtonWrapper">',
                    '<a id="DashboardAddfilter" class="btn btnDefault btnAddFilter" data-bind="css: $root.Model.CanUpdateDashboard(\'query_difinitions\') ? \'\' : \'disabled\', click: $root.ShowAddFilterPopup"><span data-bind="text: Localization.AddFilter">' + Localization.AddFilter + '</span></a>',
                '</div>',
            '</div>',

            '<div class="definitionArea">',
                '<h2 data-bind="text: Localization.Definition"></h2>',
                '<div class="DefInfo">',
                    '<label data-bind="text: Localization.AppliedDashboardDisplays"></label>',
                    '<div id="FilterWrapper">',
                        '<div class="definitionList" data-bind="foreach: { data: Definitions, as: \'def\', afterRender: $root.DefinitionsAfterRender }, css: { no: Definitions().length === 0 }">',
                            '<div class="filterItem" data-bind="attr: { \'class\': \'filterItem \' + JSON.parse(def.selected()).type }">',
                                '<div class="FilterHeader Collapse" data-bind="css: { \'Disabled\': !def.displays().length }, click: $root.DefinitionHeaderClick">',
                                    '<div class="displayNameContainer large" data-bind="html: $root.DefinitionGetHeaderName(def, true), attr: { title: $root.DefinitionGetHeaderName(def, false) }"></div>',
                                    '<a class="btnDelete" data-bind="click: $root.DefinitionDeleteWidget, clickBubble: false, visible: $root.Model.CanUpdateDashboard(\'widget_definitions\')"></a>',
                                '</div>',
                                '<div class="FilterDetail Hide">',
                                    '<div class="widgetDetailRow">',
                                        '<label for="WidgetName-$index()" class="widgetDetailLabel" data-bind="text: Localization.WidgetName"></label>',
                                        '<div class="widgetDetailValue"><input id="WidgetName-$index()" type="text" class="eaText txtWidgetName" data-bind="value: def.widget_name, valueUpdate: \'afterkeydown\', css: { placeholder: !def.default_name }, enable: def.is_readonly" /></div>',
                                    '</div>',
                                    '<div class="widgetDetailRow widgetDetailRowAngle">',
                                        '<label class="widgetDetailLabel" data-bind="text: Localization.WidgetAngleName"></label>',
                                        '<div class="widgetDetailValue">',
                                            '<div class="displayNameContainer large" data-bind="html: def.angle_name"></div>',
                                        '</div>',
                                    '</div>',
                                    '<div class="widgetDetailRow widgetDetailRowDisplays">',
                                        '<label class="widgetDetailLabel" data-bind="text: Localization.SelectDashboardDisplay"></label>',
                                        '<div class="widgetDetailValue FilterCriteriaPlaceHolder">',
                                            '<div class="DisplayItemList" data-bind="foreach: { data: def.displays, as: \'display\' }">',
                                                '<div class="ItemList" data-bind="click: $root.DefinitionChangeWidget.bind(display, display, $root.DefinitionCanSelectDisplay(display)), css: { disabled: !$root.DefinitionCanSelectDisplay(display), ItemListSelected: JSON.parse(def.selected()).id === display.id }">',
                                                    '<div class="displayNameContainer large" data-bind="html: display.name_html"></div>',
                                                    '<div class="selectStatus"></div>',
                                                '</div>',
                                            '</div>',
                                        '</div>',
                                    '</div>',
                                '</div>',
                            '</div>',
                        '</div>',
                    '</div>',
                '</div>',
            '</div>',

            '<div class="publishingArea">',
                '<h2 data-bind="text: Localization.AngleDetailPublishTabHeader">' + Localization.AngleDetailPublishTabHeader + '</h2>',
                '<div class="PublishChoice">',
                    '<input id="DashboardIsPublished" type="checkbox" data-bind="checked: Model.Data().is_published(), visible: false" />',
                    '<a class="btn btnSmall btnDefault btnPublish" data-bind="css: { disabled: !(Model.Data().authorizations.publish || Model.Data().authorizations.unpublish) }" onclick="dashboardDetailsHandler.ShowPublishPopup();">',
                        '<span class="lblPublishChoice" data-bind="text: Model.Data().is_published() ? Localization.AngleDetailPublishTabUnpublishButton : Localization.AngleDetailPublishTabPublishButton">' + Localization.AngleDetailPublishTabPublishButton + '</span>',
                        '<i class="icon" data-bind="css: { public: Model.Data().is_published(), private: !Model.Data().is_published() }"></i>',
                    '</a>',
                '</div>',
                '<div class="PublishChoice validate">',
                    '<input type="checkbox" data-bind="checked: Model.Data().is_validated, visible: false" />',
                    '<a class="btn btnSmall btnDefault btnValidate" data-bind="css: { disabled: !(Model.Data().authorizations.unvalidate || Model.Data().authorizations.validate) }, click: $root.SetValidate">',
                        '<span class="lblPublishChoice" data-bind="text: Model.Data().is_validated() ? Localization.AngleDetailPublishTabUnvalidatedAngle : Localization.AngleDetailPublishTabValidatedAngle">' + Localization.AngleDetailPublishTabValidatedAngle + '</span>',
                        '<i class="icon" data-bind="css: { validate: Model.Data().is_validated(), unvalidate: !Model.Data().is_validated() }"></i>',
                    '</a>',
                '</div>',
                '<div class="StatSeparate"></div>',
                '<div id="PublishTabWrapper"></div>',
            '</div>',

            '<div class="statisticArea">',
                '<h2 data-bind="text: Localization.Statistics">' + Localization.Statistics + '</h2>',
                '<div class="row">',
                    '<div class="field" data-bind="text: Localization.CreatedBy">' + Localization.CreatedBy + '</div>',
                    '<div class="input">',
                        '<span data-bind="text: Model.Data().created ? Model.Data().created.full_name : \'\'">-</span>',
                        '<span data-bind="text: Model.Data().created ? ConvertUnixTimeStampToDateStringInAngleDetails(Model.Data().created.datetime()) : \'\'">-</span>',
                    '</div>',
                '</div>',
                '<div class="StatSeparate"></div>',
                '<div class="row">',
                    '<div class="field" data-bind="text: Localization.LastChangedBy">' + Localization.LastChangedBy + '</div>',
                    '<div class="input">',
                        '<span data-bind="text: Model.Data().changed ? Model.Data().changed.full_name : \'\'">-</span>',
                        '<span data-bind="text: Model.Data().changed ? ConvertUnixTimeStampToDateStringInAngleDetails(Model.Data().changed.datetime()) : \'\'">-</span>',
                    '</div>',
                '</div>',
                '<div class="row">',
                    '<div class="field" data-bind="text: Localization.LastExecutedBy">' + Localization.LastExecutedBy + '</div>',
                    '<div class="input">',
                        '<span data-bind="text: Model.Data().executed ? Model.Data().executed.full_name : \'\'">-</span>',
                        '<span data-bind="text: Model.Data().executed ? ConvertUnixTimeStampToDateStringInAngleDetails(Model.Data().executed.datetime()) : \'\'">-</span>',
                    '</div>',
                '</div>',
                '<div class="StatSeparate"></div>',
            '</div>',
        '</div>'
    ].join('');
}
