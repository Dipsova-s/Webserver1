@using EveryAngle.ManagementConsole.Models
@using EveryAngle.ManagementConsole.Helpers
@using EveryAngle.Shared.Globalization
@using Newtonsoft.Json
@using EveryAngle.WebClient.Service.Security;
@using EveryAngle.Core.ViewModels.Users;

@model List<EveryAngle.Core.ViewModels.Users.SystemRoleViewModel>
@{
    var assignedRoles = SessionHelper.Initialize().Session.AssignedRoles;
    var authenticationProviders = (IEnumerable<SystemAuthenticationProviderViewModel>)ViewBag.AuthenticationProviders;
 }
<script>
    MC.util.loadScript({
        test: MC.Models && MC.Models.Roles,
        url: '@Scripts.Url("~/bundles/models/roles")',
        callback: function () {
            MC.Models.Roles.InitialAllRoles({
                GetModelsNameUri: '@Url.Action("GetModelsName", "Model")',
                CheckCopyRoleUri: '@Url.Action("CheckCopyRole", "Role")',
                CopyRoleUri: '@Url.Action("CopyRole", "Role")',
                ModelUri: '@ViewBag.ModelUri',
                CurrentAssignedRolesUser: @Html.Raw(Json.Encode(assignedRoles)),
                AllRolesPageUri: '@SiteMapHelper.ActionHash("GlobalSettings/AllLabelCategories")',
                ConsolidatedRoleUri:'@Url.Action("GetConsolidatedRole", "Role")',
                SupportOData : @Convert.ToString(ViewBag.SupportOData).ToLower()
            });

            MC.ui.masschangeuser.GetUserInRoleUri =  '@Url.Action("GetUserInRole", "Role")';
            MC.ui.masschangeuser.GetUsersUri= '@Url.Action("GetAllUsers", "Role")';
            MC.ui.masschangeuser.SaveUserInRoleUri= '@Url.Action("SaveUserInRole", "Role")';
            MC.ui.masschangeuser.AuthenticationProviders= @Html.Raw(Json.Encode(authenticationProviders));
        }
    });
</script>


@{
    @Html.RenderPageToolbar(new List<PageToolbarButtonModel>
    {
        new PageToolbarButtonModel { Type = PageToolbarButtonType.Reload }
    })
}

<div class="content pageRole">
    <input type="hidden" id="modelUri" value="@ViewBag.ModelUri" />
    <input type="hidden" id="modelId" value="@ViewBag.ModelId" />
    <div class="contentSection contentSectionGrid">
        <div class="gridToolbar gridToolbarTop">
            <div class="gridToolbarFilter">
                <input type="text" id="RolesGridFilterBox" placeholder="@Resource.Filter" data-role="gridfilter" data-method="remote" data-target="#RolesGridContainer" />
                <span class="icon icon-filter"></span>
            </div>
        </div>
        <h2>@Resource.AllAvailableRolesOn @ViewBag.ModelName</h2>
        <div class="gridContainer" id="RolesGridContainer">
            @{Html.RenderPartial("~/Views/Model/Role/RolesGrid.cshtml", Model);}
        </div>
        <div class="gridToolbar gridToolbarBottom">
        @{

            List<PageToolbarButtonModel> buttons = new List<PageToolbarButtonModel>();
            buttons.Add(new PageToolbarButtonModel
            {
                ModelUri = ViewBag.ModelUri,
                Privilege = EveryAngle.ManagementConsole.Models.PrivilegeType.Model,
                Type = PageToolbarButtonType.Custom,
                EnableTemplate = "<a href=\"" + SiteMapHelper.ActionHash("Models/" + ViewBag.ModelId + "/Roles/CreateNewRole") + "\" class=\"btn btnPrimary btnAdd\">" + Resource.CreateNewRole + "</a>",
                DisableTemplate = "<a class=\"btn btnPrimary btnAdd disabled\">" + Resource.CreateNewRole + "</a>"
            });
            @Html.RenderPageToolbarBottom(buttons)
        }
        </div>

        <div class="popup" id="popupCopyRole">
            <div class="popupContent">
                <form id="formCopyRoleToModel" data-role="validator">
                    <div class="contentSection contentSectionInfo">
                        <div class="contentSectionInfoItem">
                            <label>@Resource.NewRoleName</label>
                            <p>
                                <input type="text" id="RoleName" class="required field_id" />
                                <input type="hidden" id="RoleUri" />
                            </p>
                        </div>
                        <div class="contentSectionInfoItem">
                            <label>@Resource.CopyToModel</label>
                            <p>
                                <select id="modelName" disabled="disabled">
                                    <option>@Resource.Loading...</option>
                                </select>
                            </p>
                        </div>
                    </div>
                </form>
            </div>
            <div class="popupToolbar">
                <a class="btn btnPrimary btnSubmit" onclick="MC.Models.Roles.CheckCopyRoleToModel(event, this)">@Resource.Ok</a>
                <a class="btn btnClose" data-role="popup-close">@Resource.Cancel</a>
            </div>
        </div>

        <a class="hidden" id="btnConfirmCopy" data-role="mcPopup" data-title="@Resource.MC_Confirm" data-target="#popupConfirmCopy" data-width="300" data-min-height="175"></a>
        <div class="popup" id="popupConfirmCopy">
            <div class="popupContent"></div>
            <div class="popupToolbar">
                <a class="btn btnPrimary" onclick="MC.Models.Roles.CopyRoleToModel(event, this)">@Resource.Ok</a>
                <a class="btn btnClose" data-role="popup-close">@Resource.Cancel</a>
            </div>
        </div>

        <div class="popup" id="ConsoliDatedRolePopup">
            <div class="popupContent"></div>
            <div class="popupToolbar">
                <a class="btn btnPrimary" data-role="popup-close">@Resource.Ok</a>
            </div>
        </div>

        @{Html.RenderPartial("~/Views/Shared/ManageUserRole.cshtml");}
    </div>
    <!--/.contentSectionGrid-->
    <hr/>

    @{Html.RenderAction("GetCommentsByType", "Comment", new { CommentType = @ViewBag.ModelId + "_Roles" });}

    <!--/.contentSectionComment-->
</div>
<!--/.content-->

