@model List<EveryAngle.Core.ViewModels.EAPackage.PackageViewModel>
@using EveryAngle.Shared.Globalization
@(Html.Kendo().Grid<EveryAngle.Core.ViewModels.Cycle.TaskHistoryViewModel>()
    .Name("PackagesHistoryGrid")
    .Columns(columns =>
    {
        columns.Bound(model => model.task_name)
            .Sortable(false)
            .Width(290)
            .ClientTemplate("#= data.task_name == null ? data.task_id : data.task_name #")
            .Title(@Resource.Name);

        columns.Bound(model => model.start_time)
            .ClientTemplate(
                "# if (data.start_time) { #"
                + "<span data-role='localize'>#= data.start_time # </span>"
                + "# } else { #"
                + " "
                + "# } #"
            )
            .HtmlAttributes(new { @class = "columnDate" })
            .HeaderHtmlAttributes(new { @class = "columnDate" })
            .Sortable(false)
            .Width(150)
            .Title(@Resource.StartTime);

        columns.Bound(model => model.end_time)
            .ClientTemplate(
                "# if (data.end_time) { #"
                + "<span data-role='localize'>#= data.end_time # </span>"
                + "# } else { #"
                + " "
                + "# } #"
            ).HtmlAttributes(new { @class = "columnDate" })
            .HeaderHtmlAttributes(new { @class = "columnDate" })
            .Sortable(false)
            .Width(150)
            .Title(@Resource.EndTime);

        columns.Bound(model => model.result)
            .Sortable(false)
            .Width(95)
            .Title("Result");

        columns.Bound(model => model.error_count)
            .Sortable(false)
            .Width(95)
            .HtmlAttributes(new { @class = "columnNumber" })
            .HeaderHtmlAttributes(new { @class = "columnNumber" })
            .Title(@Resource.ErrorCount);

        columns.Bound(model => model.warning_count)
            .Sortable(false)
            .Width(95)
            .HtmlAttributes(new { @class = "columnNumber" })
            .HeaderHtmlAttributes(new { @class = "columnNumber" })
            .Title(@Resource.WarningCount);

        columns.Bound(model => model.correlation_id)
            .Sortable(false)
            //.Width(75)
            .Title(@Resource.MC_Action)
            .HeaderHtmlAttributes(new { @class = "gridColumnToolbar" })
            .HtmlAttributes(new { @class = "gridColumnToolbar" })
            .ClientTemplate(
                    "<a class=\"btn btnInfo\" onclick=\"MC.ui.logpopup.ShowLogTable(this, \'#= correlation_id #\')\" data-target=\"\\#popupLogTable\" data-title=\"#= task_name #\" data-width=\"760\" data-min-height=\"600\" data-height=\"600\" data-role=\"mcPopup\" class=\"btn btnInfo\"  ></a>"
            );

    })
    .Sortable(sort => sort.AllowUnsort(false))
    .Resizable(resize => resize.Columns(true))
    .Scrollable(scroll => scroll.Virtual(true).Height(37 * 6))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Events(e => e.RequestStart("onKendoGridPagingStart"))
        .Read(read => read.Action("ReadPackagesHistory", "Packages", new { modelPackagesUri = @ViewBag.ModelPackagesHistoryUri }))
        .PageSize((int)ViewData["DefaultPageSize"])
    )
    .EnableCustomBinding(true)
    .AutoBind(false)
)

<div class="popup" id="popupLogTable">
    <div class="popupContent">
        <div class="contentSection contentSectionGrid">
            <div class="gridToolbar gridToolbarTop hidden">
                <div class="gridToolbarFilter">
                </div>
            </div>
            <div class="gridContainer">
                <div id="SystemLogGrid"></div>
                <div id="SystemLogDetails">
                    <div class="logDetails">

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>