@using EveryAngle.ManagementConsole.Models
@using EveryAngle.ManagementConsole.Helpers
@using EveryAngle.Shared.Globalization
@model IEnumerable<EveryAngle.Core.ViewModels.Model.ModelViewModel>

@{
    SiteMapModel.SiteMap sitemapNode;
    
    List<PageToolbarButtonModel> buttons = new List<PageToolbarButtonModel>();
    buttons.Add(new PageToolbarButtonModel
    {
        Privilege = PrivilegeType.System,
        Type = PageToolbarButtonType.Custom,
        Label = Resource.MC_Edit_Models,
        Link = SiteMapHelper.ActionHash("Models/AllModels"),
        CssClass = "btnAllModels"
    });
    buttons.Add(new PageToolbarButtonModel
    {
        Privilege = PrivilegeType.System,
        Type = PageToolbarButtonType.Custom,
        Label = Resource.MC_Setup_New_Model,
        Link = SiteMapHelper.ActionHash("Models/AllModels/CreateNewModel"),
        CssClass = "btnPrimary btnCreateNewModel"
    });
    @Html.RenderPageToolbar(buttons)
}

<script>
    MC.util.loadScript({
        test: MC.Models && MC.Models.Model,
        url: '@Scripts.Url("~/bundles/models/model")',
        callback: function () {
            MC.Models.Model.InitialMainModelPage({
                ModelServers: @(Html.Raw(new System.Web.Script.Serialization.JavaScriptSerializer().Serialize(ViewBag.ModelServers))),
                UpdateModelInfoUri: '@Url.Action("UpdateModelInfo", "Model")',
                ModelGraphDataUri: '@Url.Action("GetModelServerGraphData", "Model")',
                IsOverviewPage: true
            });
        }
    });
</script>

<div class="content pageOverview">

    <div class="contentSection contentSectionAllModel">
        @{Html.RenderAction("GetAllModelServers", "Model", new { models = Model, licenses = ViewBag.LicensesData, modelServersUri = ViewBag.ModelServersUri });}
    </div>
    <!--/.contentSectionAllModel-->

</div>
<!--/.content-->

