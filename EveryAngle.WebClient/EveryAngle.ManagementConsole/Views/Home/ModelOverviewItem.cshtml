@using EveryAngle.Shared.Globalization
@using EveryAngle.Core.ViewModels.ModelServer
@using EveryAngle.Core.ViewModels.SystemLog
@model List<EveryAngle.Core.ViewModels.ModelServer.ModelServerViewModel>

@{
    string serverStatus = ViewBag.ModelStatus;
    string serverStatusClassName = (serverStatus != null) ? serverStatus.Replace(" ", "") : serverStatus;
    if (serverStatus.ToLower() == "initializing" || serverStatus.ToLower() == "loading"
        || serverStatus.ToLower() == "extract" || serverStatus.ToLower() == "restructure"
            || serverStatus.ToLower() == "importing")
    {
        serverStatusClassName = "Loading";
    }

    string modelOverviewItem = "modelOverviewItem" + serverStatusClassName;
    string modelInfoStatus = "modelInfoStatus" + serverStatusClassName;
    DateTime currentDate = DateTime.Now;


    // license
    string licenseStatus;
    string licenseDate = ViewBag.LicenseDate;
    if (licenseDate == null)
    {
        licenseStatus = "<strong class=\"noLicense\">" + Resource.MC_Unlicensed + "</strong>";
    }
    else
    {
        if (EveryAngle.Shared.Helpers.LicenseHelper.IsValidLicense(licenseDate))
        {
            licenseStatus = "<strong class=\"licensed\">" + Resource.MC_LicensedUntil + " <abbr data-role=\"localize\" data-type=\"date\">" + licenseDate + "</abbr></strong>";
        }
        else
        {
            licenseStatus = "<strong class=\"noLicense\"> " + Resource.MC_LicensedExpiredOn + " <abbr data-role=\"localize\" data-type=\"date\">" + licenseDate + "</abbr></strong>";
        }
    }
}
@if (Model.Any())
{
    ModelServerViewModel currentInstance = Model.FirstOrDefault(x => x.IsCurrentInstance);
    ModelServerViewModel modelServer = Model.FirstOrDefault(x => x.IsPrimaryType);
    string modelServerName = modelServer != null ? modelServer.id + "_status" : "";

    <div class="modelOverviewItem @modelOverviewItem">
        <h2>@ViewBag.ModelName<span></span></h2>

        <div class="modelInfoStatusReport @modelInfoStatus">
            <strong class="@modelServerName">@ViewBag.ModelStatus</strong>
            @if (currentInstance != null)
            {
                DateTime startUnixTime = new DateTime(1970, 1, 1, 0, 0, 0, 0);
                startUnixTime = startUnixTime.AddSeconds((long)currentInstance.timestamp).ToLocalTime();
                System.TimeSpan modeldate = currentDate.Subtract(startUnixTime);
                var day = modeldate.Days == 0 ? null : modeldate.Days + " days";
                var hours = modeldate.Hours == 0 ? null : modeldate.Hours + " hr";
                var minutes = modeldate.Minutes == 0 ? null : modeldate.Minutes + " mins";
                string className = "hidden description " + currentInstance.id + "_time";

                <div class="@className">for @day @hours @minutes</div>
            }
            else if (modelServer != null) {
                DateTime startUnixTime = new DateTime(1970, 1, 1, 0, 0, 0, 0);
                startUnixTime = startUnixTime.AddSeconds((long)modelServer.timestamp).ToLocalTime();
                System.TimeSpan modeldate = currentDate.Subtract(startUnixTime);
                var day = modeldate.Days == 0 ? null : modeldate.Days + " " + Resource.MC_Day;
                var hours = modeldate.Hours == 0 ? null : modeldate.Hours + " " + Resource.MC_Hr;
                var minutes = modeldate.Minutes == 0 ? null : modeldate.Minutes + " " + Resource.MC_Mins;
                string className = "hidden description " + modelServer.id + "_time";

                <div class="@className">for @day @hours @minutes</div>
            }
        </div>

        <div class="modelOverviewItemDetail">
            <strong>@Resource.Instances</strong>
            @foreach (ModelServerViewModel item in Model)
            {
                DateTime startUnixTime = new DateTime(1970, 1, 1, 0, 0, 0, 0);
                startUnixTime = startUnixTime.AddSeconds((long)item.timestamp).ToLocalTime();

                var modeldate = currentDate.Subtract(startUnixTime);
                var day = modeldate.Days == 0 ? null : modeldate.Days + "d";
                var hours = modeldate.Hours == 0 ? null : modeldate.Hours + "hr";
                var minutes = modeldate.Minutes == 0 ? null : modeldate.Minutes + "m";

                if (item.id != "EA4IT_Xtractor")
                {
                    string className = item.id + "_status";
                    string classtime = "alwaysHidden " + item.id + "_time";

                    <div class="modelOverviewItemDetailItem">

                        @if (item.IsCurrentInstance)
                        {
                            <strong>
                                <label class="@className">@item.id: @item.status</label>
                                <span class="@classtime">@day @hours @minutes</span>
                            </strong>
                        }
                        else
                        {
                            <label class="@className">@item.id: @item.status</label>
                            <span class="@classtime">@day @hours @minutes</span>
                        }

                    </div>
                }
            }
        </div>

        @if (currentInstance != null && (currentInstance.SupportModelDate || currentInstance.SupportModelSize))
        {
            <div class="modelOverviewItemDetail">
                @if (currentInstance.SupportModelDate)
                {
                    <strong>@Resource.ModelDate</strong>
                    <p data-role="localize">@(currentInstance != null ? currentInstance.modeldata_timestamp.ToString() : "")</p>
                }
                @if (currentInstance.SupportModelSize)
                {
                    <div class="modelOverviewItemDetailItem">@string.Format("{0}: {1}", Resource.MC_Volume, currentInstance != null ? currentInstance.FormattedSize : "0 GB")</div>
                }
            </div>
        }

        <div class="modelOverviewItemDetail">
            <strong>@Resource.MC_Users</strong>
            <div class="modelOverviewItemDetailItem">
                <label>@Resource.Enabled:</label>
                <span>@ViewBag.AuthorizedUsers</span>
            </div>
            <div class="modelOverviewItemDetailItem">
                <label style="width:auto">@Resource.MC_Connected:</label>
                <span style="width:100px">@ViewBag.ConnectedUser</span>
            </div>
            <div class="modelOverviewItemDetailItem">@Html.Raw(licenseStatus)</div>
        </div>
        @*M4-13792: Fixed 'Open model' button missing*@
        <a href="@SiteMapHelper.ActionHash("Models/" + @ViewBag.ModelId)" class="btn btnLarge btnNext btnOpenModel">@Resource.OpenModel</a>
        <a href="@SiteMapHelper.ActionHash("GlobalSettings/Systemlog/ModelServer")" onclick="MC.util.redirect(event, this)" data-parameters='{"target":"@SystemLogType.ModelServer","modelId":"@ViewBag.ModelId"}' class="btn btnLarge btnNext btnOpenLogs">@Captions.MC_Button_OpenErrorWarningLog</a>
    </div>
}