@using EveryAngle.ManagementConsole.Models
@using EveryAngle.ManagementConsole.Helpers
@using EveryAngle.Shared.Globalization

<script>
    MC.util.loadScript({
        test: MC.Models && MC.Models.Labels,
        url: '@Scripts.Url("~/bundles/models/labels")',
        callback: function () {
            MC.Models.Labels.Initial({
                SaveUri: '@Url.Action("SaveLabelCategories", "LabelCategories")',
                DeleteUri: '',
                GetLabelsUri: '@Url.Action("GetLabels", "LabelCategories")',
                ModelUri: '@ViewBag.ModelUri'
            });
        }
    });
</script>

@{
    @Html.RenderPageToolbar(new List<PageToolbarButtonModel>
{
        new PageToolbarButtonModel { Privilege = PrivilegeType.Model, ModelUri = ViewBag.ModelUri, Type = PageToolbarButtonType.Save, OnClick = "MC.Models.Labels.SaveLabelCategories()" },
        new PageToolbarButtonModel { Type = PageToolbarButtonType.Reload }
    })
}

<div class="content pageLabel">
    <div class="contentSection contentSectionGrid">
        <div class="gridToolbar gridToolbarTop">
            <div class="gridToolbarFilter">
                <input type="text" id="FilterLabelCategoryTextbox" placeholder="@Resource.MC_Filter" data-role="gridfilter" data-method="remote" data-target="#LabelCategoriesGridContainer" /><span class="icon"></span>
            </div>
        </div>
        <h2>@ViewBag.ModelName @Resource.MC_Labels</h2>
        <div class="gridContainer" id="LabelCategoriesGridContainer">
            @{Html.RenderAction("GetFilterLabelCategories", "LabelCategories", new {modelUri = ViewBag.ModelUri, q = ""});}
        </div>
    </div>
    <!--/.contentSectionGrid-->
    <hr/>

    @{Html.RenderAction("GetCommentsByType", "Comment", new { CommentType = @ViewBag.ModelId + "_LABELCATEGORIES" });}

    <input type="hidden" id="modelUri" value="@ViewBag.ModelUri" />
</div>

<!--/.content-->
