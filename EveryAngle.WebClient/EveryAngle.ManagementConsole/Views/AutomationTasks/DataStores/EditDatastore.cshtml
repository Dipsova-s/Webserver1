@using EveryAngle.ManagementConsole.Models
@using EveryAngle.ManagementConsole.Helpers
@using EveryAngle.Shared.Globalization
@model EveryAngle.Core.ViewModels.DataStore.DataStoresViewModel

<script>
    MC.util.loadScript({
        test: MC.AutomationTasks && MC.AutomationTasks.DataStores,
        url: '@Scripts.Url("~/bundles/automationtasks/datastores")',
        callback: function () {
            MC.AutomationTasks.DataStores.InitialDataStores({
                AllDataStoreUri: '@SiteMapHelper.ActionHash("AutomationTasks/DataStores")',
                SaveUri: '@Url.Action("SaveDatastore", "AutomationTasks")',
                EditDatastoreUri: '@SiteMapHelper.ActionHash("AutomationTasks/DataStores/EditDatastores")',
                DatastoreUri: '@ViewBag.DatastoreUri',
                SettingDatastoreUri: '@ViewBag.SettingDatastoreUri',
                TestConnectionUri: '@Url.Action("TestDataStoreConnection", "AutomationTasks")',
                PluginUri: '@ViewBag.PluginUri',
                PluginType: '@Model.datastore_plugin'
            });
        }
    });
</script>

@{
    @Html.RenderPageToolbar(new List<PageToolbarButtonModel>
    {
        new PageToolbarButtonModel { Privilege=PrivilegeType.System, Type = PageToolbarButtonType.Save, OnClick = "MC.AutomationTasks.DataStores.SaveDatastore()" },
        new PageToolbarButtonModel { Type = PageToolbarButtonType.Cancel, Link = SiteMapHelper.ActionHash("AutomationTasks/DataStores") }
    })
}

<div class="content pageDatastore pageDatastoreEdit">
    <form id="formAddDatastore" data-role="validator" autocomplete="off" onsubmit="return false">
        <div class="contentSection contentSectionInfo">

            @{
                bool? isDefault = false;
                if (Model.id != null)
                {
                    isDefault = Model.is_default;
                    <h2>@Resource.Edit @Resource.MC_DataStore</h2>
                }
                else
                {
                    <h2>@Resource.MC_CreateNew @Resource.MC_DataStore</h2>
                }
            }
            <div class="contentSectionInfoItem">
                <label>@Resource.MC_DataStoreName:</label>

                <input type="hidden" name="id" value="@Model.id" />
                <input type="hidden" name="datastore_plugin" value="@Model.datastore_plugin" />
                <p>@Html.TextBoxFor(model => model.name, new { @class = "required", @name = "name", maxlength = 25 })</p>

            </div>
            <div class="contentSectionInfoItem">
                <label>@Resource.MC_DataStorePlugin:</label>
                <p>@ViewBag.DatastorePlugin</p>
            </div>
            @{
                if (Model.datastore_plugin.Equals("csv"))
                {
                    <div class="contentSectionInfoItem">
                        <label>@Resource.DefaultDatastore:</label>
                        <p>
                            <label>
                                <input id="is_default" name="default" type="checkbox" @(isDefault.HasValue && isDefault.Value ? "checked=\"checked\"" : "") />
                                <span class="label"></span>
                            </label>
                        </p>
                    </div>
                }
            }
        </div>
        <!--/.contentSectionInfo-->
        <hr/>
    </form>
    @{
        if (Model.connection_settings != null)
        {
            <div class="connection_settings" id="CheckOutputFolder">
                @{Html.RenderPartial("~/Views/Shared/Plugins.cshtml", Model.connection_settings, new ViewDataDictionary { {"page", "DataStore"} } );}
                <div class="contentSectionInfoItem" id="row-test-connection">
                    <label>&nbsp;</label>
                    <p>
                        <a id="btnTestConnection" class="btn" onclick="MC.AutomationTasks.DataStores.TestConnection()">@Resource.MC_TestConnection</a><br/>
                        <span class="statusInfo"></span>
                    </p>
                </div>
                <hr class="last" />
            </div>
        }
        if (Model.data_settings != null)
        {
            <div class="data_settings">
                @{Html.RenderPartial("~/Views/Shared/Plugins.cshtml", Model.data_settings, new ViewDataDictionary { { "page", "DataStore" } });}
            </div>
            
        }
        if (Model.connection_settings != null || Model.data_settings != null)
        {
                Html.RenderPartial("~/Views/Shared/PluginPopupDescriptionTemplate.cshtml");
        }
    }
</div>
<!--/.content-->
