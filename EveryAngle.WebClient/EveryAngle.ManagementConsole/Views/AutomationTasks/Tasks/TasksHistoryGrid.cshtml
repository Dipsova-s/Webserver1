@model List<EveryAngle.Core.ViewModels.Cycle.TaskHistoryViewModel>
@using EveryAngle.Shared.Globalization

@{
    int pageSize = (int)ViewData["DefaultPageSize"];
    int gridHeight = Math.Min(pageSize, 6) * 37;
}

@(Html.Kendo().Grid<EveryAngle.Core.ViewModels.Cycle.TaskHistoryViewModel>()
    .Name("TaskHistoryGrid")
    .Columns(columns =>
    {
        columns.Bound(model => model.task_name)
            .Width(220)
            .ClientTemplate("#: data.task_name #")
            .Title(Resource.Name);

        columns.Bound(model => model.start_time)
            .ClientTemplate("#= data.start_time == null ? '' : MC.util.getDisplayTimeLocal(data.start_time, true) #")
            .HtmlAttributes(new { @class = "columnDate" })
            .HeaderHtmlAttributes(new { @class = "columnDate" })
            .Width(135)
            .HeaderTemplate(PageHelper.HeaderWithTimezone(Resource.StartTime));

        columns.Bound(model => model.end_time)
            .ClientTemplate("#= data.end_time == null ? '' : MC.util.getDisplayTimeLocal(data.end_time, true) #")
            .HtmlAttributes(new { @class = "columnDate" })
            .HeaderHtmlAttributes(new { @class = "columnDate" })
            .Width(135)
            .HeaderTemplate(PageHelper.HeaderWithTimezone(Resource.EndTime));

        columns.Bound(model => model.result)
            .Width(65)
            .ClientTemplate(
                "# if (data.result) { #"
                + "<span data-tooltip-title='#= data.result #' class='#= data.result #'></span>#= data.result #"
                + "# } else { #"
                + " "
                + "# } #"
            )
            .HtmlAttributes(new { @class = "resultType" }) 
            .Title("Result");

        columns.Bound(model => model.arguments)
        .Sortable(false)
        .Title(@Resource.MC_Action)
        .Width(75)
        .HeaderHtmlAttributes(new { @class = "gridColumnToolbar" })
        .HtmlAttributes(new { @class = "gridColumnToolbar" })
        .ClientTemplate(
                "<a class=\"btn btnInfo\" onclick=\"MC.ui.logpopup.ShowLogTable(this, \'#= correlation_id #\',\'#= timestamp #\')\" data-target=\"\\#popupLogTable\" data-title=\"#= task_name #\" data-width=\"760\" data-min-height=\"600\" data-height=\"600\" data-role=\"mcPopup\" class=\"btn btnInfo\"  ></a>"
        );

    })
    .AutoBind(false)
    .Sortable(sort => sort.Enabled(false))
    .Resizable(resize => resize.Columns(true))
    .Scrollable(scroll => scroll.Virtual(true).Height(gridHeight))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Events(e => e.RequestStart("onKendoGridPagingStart"))
        .Read(read => read.Action("ReadAutomationTasksHistories", "AutomationTasks", new { taskHistoryUri = @ViewBag.TaskHistoryUri }))
        .PageSize(pageSize)
        .ServerOperation(false)
    )
)

<div class="popup" id="popupLogTable">
    <div class="popupContent">
        <div class="contentSection contentSectionGrid">
            <div class="gridToolbar gridToolbarTop hidden">
                <div class="gridToolbarFilter">
                </div>
            </div>
            <div class="gridContainer">
                <div id="SystemLogGrid"></div>
                <div id="SystemLogDetails">
                    <div class="logDetails">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
