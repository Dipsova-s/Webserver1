@using EveryAngle.ManagementConsole.Models
@using EveryAngle.ManagementConsole.Helpers
@using EveryAngle.Shared.Globalization

<script>
    MC.util.loadScript([
        {
            test: false,
            url: '@Scripts.Url("~/bundles/clipboard")'
        },
        {
            test: MC.AutomationTasks && MC.AutomationTasks.Tasks,
            url: '@Scripts.Url("~/bundles/automationtasks/tasks")',
            callback: function () {
                MC.AutomationTasks.Tasks.InitialAllTasks({
                    DeleteTaskUri: '@Url.Action("DeleteTask", "AutomationTasks")',
                    ExecuteTaskUri: '@Url.Action("ExecuteTask", "RefreshCycle")',
                    EditTaskPage: '@SiteMapHelper.ActionHash("AngleExports/AutomationTasks/EditTask")',
                    AbortTaskUri: '@Url.Action("AbortTask", "RefreshCycle")',
                    TaskHistoryUri: '@ViewBag.TaskHistoryUri',
                    GetTaskHistoryUri: '@Url.Action("GetTaskHistory", "AutomationTasks")',
                    AllTaskPageUri: '@SiteMapHelper.ActionHash("AngleExports/AutomationTasks")',
                    CopyTaskUri: '@Url.Action("CopyTask", "AutomationTasks")',
                    VerifyModelPriviledgeUri: '@Url.Action("VerifyModelPriviledge", "AutomationTasks")'
                });

                MC.ui.logpopup.GetLogUri = '@Url.Action("GetTasksHistoryByCorrelationId", "AutomationTasks")',
                MC.ui.logpopup.GetLogDetailUri = '@Url.Action("GetTaskHistory", "AutomationTasks")',
                MC.ui.logpopup.TaskHistoryUri = '@ViewBag.TaskHistoryUri',
                MC.ui.logpopup.LogType = 'TasksEventLog'
            }
        }
    ]);
</script>
@{
    List<PageToolbarButtonModel> buttons = new List<PageToolbarButtonModel>();
    buttons.Add(new PageToolbarButtonModel
    {
        Type = PageToolbarButtonType.Reload
    });
    @Html.RenderPageToolbar(buttons)
}
<div class="content pageRefreshCycle">

    <div class="contentSection contentSectionGrid contentSectionGridTasks">
        <div class="gridToolbar gridToolbarTop">
            <div class="gridToolbarFilter">
                <input type="text" id="TasksFilterTextbox" placeholder="@Resource.MC_Filter" data-role="gridfilter" data-method="remote" data-target="#TaskDetailsGridContainer" />
                <span class="icon icon-filter"></span>
            </div>
        </div>
        <h2>@Resource.MC_AutomationTasks</h2>
        <form id="TaskForm" data-role="validator">
            <div class="gridContainer" id="TaskDetailsGridContainer">
                @{Html.RenderAction("GetTasksGrid", "AutomationTasks", new { tasksUri = ViewBag.TasksUri });}
            </div>
        </form>

        <div class="gridToolbar gridToolbarBottom">
            @{
                List<PageToolbarButtonModel> gridButtons = new List<PageToolbarButtonModel>();
                gridButtons.Add(new PageToolbarButtonModel
                {
                    EnableTemplate = "<a href=\"" + SiteMapHelper.ActionHash("AngleExports/AutomationTasks/CreateNewTask") + "\" class=\"btn btnPrimary btnAdd\" onclick=\"MC.AutomationTasks.Tasks.CreateNewTaskUri(event, this)\">" + Resource.MC_AddTask + "</a>",
                    DisableTemplate = "<a class=\"btn btnPrimary btnAdd disabled\">" + Resource.MC_AddTask + "</a>",
                    Type = PageToolbarButtonType.Custom,
                    Privilege = PrivilegeType.System
                });
                @Html.RenderPageToolbarBottom(gridButtons)
            }
        </div>
    </div>
    <hr/>

    <div class="contentSection contentSectionGrid contentSectionGridTasksHistory">
        <h2>Tasks history</h2>
        <div class="gridContainer" id="TaskHistoryGridContainer">
            @{Html.RenderAction("GetTasksHistory", "AutomationTasks", new { taskHistoryUri = @ViewBag.TaskHistoryUri });}
        </div>
    </div>
    <!--/.contentSectionGrid-->
</div>

<div class="popup" id="popupCopyTask">
    <div class="popupContent">
        <form id="formCopyTask" data-role="validator">
            <div class="contentSection contentSectionInfo">
                <div class="contentSectionInfoItem">
                    <label>@Resource.MC_NewTaskName</label>
                    <p>
                        <input type="text" id="TaskName" maxlength="100" class="required" />
                        <input type="hidden" id="TaskUri" />
                    </p>
                </div>
            </div>
        </form>
    </div>
    <div class="popupToolbar">
        <a class="btn btnPrimary btnSubmit" onclick="MC.AutomationTasks.Tasks.CopyTask(event, this)">@Resource.Ok</a>
        <a class="btn btnClose" data-role="popup-close">@Resource.Cancel</a>
    </div>
</div>