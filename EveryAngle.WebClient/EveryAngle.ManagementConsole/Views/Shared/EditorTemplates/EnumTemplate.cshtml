@model EveryAngle.Core.ViewModels.Model.Setting

<label data-role="tooltip">@Model.Name</label>
<p>
@{
    string selectedValue = string.Empty;
    if (string.IsNullOrEmpty(Convert.ToString(Model.Value)))
    {
        if (Model.Options != null && Model.Options.Count > 0)
        {
            foreach (var option in Model.Options)
            {
                if (option.Default.HasValue && option.Default.Value == true)
                {
                    selectedValue = option.id;
                    break;
                }
            }
        }
    }
    else
    {
        selectedValue = Convert.ToString(Model.Value);
    }


    if (ViewData["enableValue"] != string.Empty)
    {
        @(Html.Kendo()
            .DropDownList()
            .Name(Model.Id)
            .Value(selectedValue)
            .DataTextField("name")
            .DataValueField("id")
            .BindTo(Model.Options)
            .HtmlAttributes(new { @class = "enum enabler autosyncinput", @data_setting_type = "enum", @data_type = "kendoDropDownList" })
            .Events(e => e.Change(@<text>
                function(e) {
                    MC.Models.ModelServer.EnablerValueChange(e);
                }
            </text>)));
    }
    else
    {
        @(Html.Kendo()
            .DropDownList()
            .Name(Model.Id)
            .Value(selectedValue)
            .DataTextField("name")
            .DataValueField("id")
            .BindTo(Model.Options)
            .HtmlAttributes(new { @class = "enum autosyncinput", @data_setting_type = "enum", @data_type = "kendoDropDownList" }));
    }
    
    if(Model.Description != null)
    {
        <a data-target="#popupDescriptionTemplate" title="Description" data-width="600" data-min-height="100" data-role="mcPopup" class="btn btnInfo" onclick='MC.util.showDescriptionPopup(this)'></a>
        <textarea class="alwaysHidden"><pre>@Model.Description</pre></textarea>
    }
}
</p>