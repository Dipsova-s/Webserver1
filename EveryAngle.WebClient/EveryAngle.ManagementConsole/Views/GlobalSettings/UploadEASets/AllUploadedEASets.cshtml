@using EveryAngle.ManagementConsole.Models
@using EveryAngle.ManagementConsole.Helpers
@using EveryAngle.Shared.Globalization

<script>
    MC.util.loadScript({
        test: MC.GlobalSettings && MC.GlobalSettings.Packages,
        url: '@Scripts.Url("~/bundles/globalsettings/packages")',
        callback: function () {
            MC.GlobalSettings.Packages.Initial({
                GetPackageSummaryUri: '@Url.Action("GetPackageSummary", "Packages")',
                GetExportPackageStatusUri: '@Url.Action("GetExportPackageStatus", "Packages")',
                PostExportPackageUri: '@Url.Action("ExportPackage", "Packages")',
                DownloadPackageUri: '@Url.Action("DownloadPackageFile", "Packages")'
            });
        }
    });
</script>

@{
    List<PageToolbarButtonModel> buttons = new List<PageToolbarButtonModel>();
    buttons.Add(new PageToolbarButtonModel
    {
        EnableTemplate = "<div class=\"field fieldFile\"><input type=\"file\" name=\"file\" id=\"file\" size=\"60\" onchange=\"MC.GlobalSettings.Packages.SavePackage(event)\" data-rule-packagename=\"true\" data-role=\"uploader\" data-text-browse=\"" + Resource.MC_UploadNewPackage + "\" /></div>",
        DisableTemplate = "<div class=\"field fieldFile\"><input type=\"file\" name=\"file\" id=\"file\" size=\"60\" data-text-browse=\"" + Resource.MC_UploadNewPackage + "\" disabled=\"disabled\"/></div>",
        Type = PageToolbarButtonType.Custom,
        Privilege = PrivilegeType.System
    });

    @Html.RenderPageToolbar(new List<PageToolbarButtonModel>
    {
        new PageToolbarButtonModel { Type = PageToolbarButtonType.Reload }
    })
}

<div class="content pagePackages">
    <div class="contentSection contentSectionGrid">
        <div class="gridToolbar gridToolbarTop">
            <div class="gridToolbarFilter">
                <input id="GlobalPackagesGridFilterBox" type="text" placeholder="@Resource.MC_Filter" data-role="gridfilter" data-method="remote" data-start="MC.GlobalSettings.Packages.PackagesGridBeforeFilter" data-target="#PackageGrid" /><span class="icon icon-filter"></span>
            </div>
        </div>
        <h2>@Resource.MC_AllUploadedPackages</h2>
        <div class="gridContainer" id="EASetsGridContainer">
            @{Html.RenderAction("GetFilterUploadedEASets", "GlobalSettings");}
        </div>
        <div class="gridToolbar gridToolbarBottom">
            <form action="@Url.Action("UploadPackage", "GlobalSettings")" data-role="validator" enctype="multipart/form-data" id="UploadPackageFileForm" method="post">
                @{
                    @Html.RenderPageToolbarBottom(buttons)

                    if (ViewBag.HasManageModel)
                    {
                        <a class="btn btnPrimary btnAdd" id="ExportPackagePopup" onclick="MC.GlobalSettings.Packages.OpenExportPopup()" href="#PopupExportPackage" title="@Resource.MC_CreatePackage" data-role="mcPopup" data-min-width="600" data-width="600" data-height="550">@Resource.MC_CreateNewPackage</a>
                    }
                    else
                    {
                        <a class="btn btnPrimary btnAdd disabled">@Resource.MC_CreateNewPackage</a>
                    }
                }
            </form>
        </div>

    </div>
    <hr />

    @{Html.RenderAction("GetCommentsByType", "Comment", new { CommentType = "UPLOAD_EA_SETS" });}
</div>

<div class="popup" id="PopupExportPackage">
    @{Html.RenderAction("RenderExportPackageForm", "GlobalSettings");}
</div>
