@using EveryAngle.ManagementConsole.Models
@using EveryAngle.Shared.Globalization

@{
    int pageSize = (int)ViewData["DefaultPageSize"];
    int gridHeight = Math.Min(pageSize, 10) * 37;

    List<PageToolbarButtonModel> buttons = new List<PageToolbarButtonModel>();
    buttons.Add(new PageToolbarButtonModel
    {
        Type = PageToolbarButtonType.GridEditDelete,
        Privilege = PrivilegeType.System,
        DisableTemplate = "<a class=\"btn btnDelete disabled\">" + Resource.Delete + "</a>"
                        + "<a class=\"btn btnDownload disabled\">" + Resource.Download + "</a>",
        EnableTemplate = "# if (data.RePlaceActivatedModels == '') { #" 
                        +"<a href=\"" + Url.Content("~/GlobalSettings/DeletePackage") + "\" onclick=\"MC.GlobalSettings.Packages.DeletePackage(event, this)\" class=\"btn btnDelete\" data-parameters='{\"packageUri\":\"#= data.Uri #\"}' data-delete-template=\"" + Resource.MC_DeletePackageConfirm + "\" data-delete-field-index=\"0\">" + Resource.Delete + "</a>"
                        + "# } else { #"
                        + "<a class=\"btn btnDelete disabled\">" + Resource.Delete + "</a>"
                        + "# } #"
                        + "# if(Modernizr.touch && !!$.browser.safari) {#"
                        + "<a class=\"btn btnDownload disabled\">" + Resource.Download + "</a>"
                        + "#} else {#"
                        + "<a href=\"" + Url.Content("~/Packages/DownloadPackageFile") + "?packageFileUri=#= data.packageFileUri #\" class=\"btn btnDownload\" onclick=\"MC.GlobalSettings.Packages.DownloadPackage(event, this)\">" + Resource.Download + "</a>"
                        + " # } #"
    });
    string gridButton = HttpUtility.HtmlDecode(Html.GetGridToolbar(buttons));
}
@(Html.Kendo().Grid<EveryAngle.Core.ViewModels.EAPackage.PackageViewModel>()
.Name("PackageGrid")
.Columns(columns =>
{
    columns.Bound(model => model.Name)
        .ClientTemplate("<span data-tooltip-title=\"MC.GlobalSettings.Packages.GetPackageNameTooltip\" data-type=\"html\">#= Name #</span>")
        .Title(Resource.Name)
        .Sortable(true);

    columns.Bound(model => model.Id)
        .Title(Resource.ID)
        .Sortable(false);
    
    columns.Bound(model => model.Version)
        .HtmlAttributes(new { @class = "columnNumber" })
        .HeaderHtmlAttributes(new { @class = "columnNumber" })
        .Title(Resource.Version)
        .Sortable(false);

    columns.Bound(model => model.RePlaceActivatedModels)
        .Title(Resource.Model)
        .Sortable(false);

    columns.Bound(model => model.source)
        .Title(Resource.Source)
        .Sortable(false);
    
    columns.Bound(model => model.ReContentsList)
        .Title(Resource.MC_ContentType)
        .Sortable(false);

    
    columns.Bound(model => model.CreatedDate)
        .Title(Resource.MC_Created).HtmlAttributes(new { @class = "columnDate" })
        .HeaderHtmlAttributes(new { @class = "columnDate" })
        .ClientTemplate(
            "# if (data.CreatedDate) { #" +
            "<span data-role=\"localize\">#= data.CreatedDate #</span>" +
            "# } #"
        ).Sortable(true);

    columns.Bound(model => model.ReLanguagesList)
        .Title(Resource.MC_Languages)
        .Sortable(false);
    
    columns.Bound("id")
        .ClientTemplate(gridButton)
        .HeaderHtmlAttributes(new { @class = "gridColumnToolbar" })
        .HtmlAttributes(new { @class = "gridColumnToolbar" })
        .Width(75)
        .Title(Resource.MC_Action)
        .Sortable(false);
})
.EnableCustomBinding(true)
.Scrollable(scroll => scroll.Virtual(true).Height(gridHeight))
.Resizable(resize => resize.Columns(true))
.Sortable(sortable => sortable.AllowUnsort(false))
.AutoBind(false)
.DataSource(dataSource => dataSource
    .Ajax().Events(e => e.RequestStart("onKendoGridPagingStart"))
    .Read(read => read.Action("ReadPackages", "GlobalSettings", new { q = @ViewBag.Query}))
    .PageSize(pageSize)
))