@model List<EveryAngle.Core.ViewModels.DownloadTable.DownloadTableFieldViewModel>
@using EveryAngle.Shared.Globalization

@(Html.Kendo().Grid(Model)
    .Name("AvailableFieldsGrid")
    .Columns(columns =>
    {
        columns.Bound(model => model.name).Title(@Resource.MC_Field);
        columns.Bound(model => model.description).Title(@Resource.Description);
        columns.Bound(model => model.is_key_field)
            .Width(75)
            .Sortable(false)
            .Title(@Resource.MC_KeyField)
            .HtmlAttributes(new { @class = "columnBoolean" })
            .HeaderHtmlAttributes(new { @class = "columnBoolean" })
            .ClientTemplate("<label>"
                            + "# if(data.is_key_field == true) { # "
                            + "<input name=\"is_key_field\" value=\" #= data.is_key_field #\" data-default=\"true\" disabled=\"disabled\" checked=\"checked\" type=\"checkbox\">"
                            + "# } else {# "
                            + "<input name=\"is_key_field\" value=\" #= data.is_key_field #\" data-default=\"false\" disabled=\"disabled\" type=\"checkbox\">"
                            + "# } #"
                            + "<span class=\"label\"></span></label>");
        columns.Bound(model => model.datatype).Title(@Resource.MC_Datatype);
        columns.Bound(model => model.size)
            .Width(50)
            .Title(@Resource.MC_Length)
            .HtmlAttributes(new { @class = "columnNumber" })
            .HeaderHtmlAttributes(new { @class = "columnNumber" });
        columns.Bound(model => model.domain).Title(@Resource.MC_Domain);
        columns.Bound(model => model.rolename).Title(@Resource.MC_Rolename);
    })
    .Sortable(sortable=> sortable.AllowUnsort(false))
    .Resizable(resize => resize.Columns(true))
    .Scrollable(scroll => scroll.Virtual(false).Height(350))
    .DataSource(dataSource => dataSource
        .Ajax().Events(e=>e.RequestStart("onKendoGridPagingStart"))
        .Read(read => read.Action("ReadDownloadTableFields", "DownloadTable", new { downloadTableUri = ViewBag.DownloadTablefieldUri, keyword = ViewData["Keyword"], isEnable = false}))
        .ServerOperation(false)
    )
    .EnableCustomBinding(true)
)
