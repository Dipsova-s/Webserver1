@model List<EveryAngle.Core.ViewModels.DownloadTable.DownloadTableViewModel>
@using EveryAngle.Shared.Globalization

@{
    int pageSize = (int)ViewData["DefaultPageSize"];
    int gridHeight = Math.Min(pageSize, 12) * 37;
}

@(Html.Kendo().Grid<EveryAngle.Core.ViewModels.DownloadTable.DownloadTableViewModel>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound("id")
            .ClientTemplate(
                "<label>"
                + "<input name=\"tableId\" type=\"checkbox\" onclick=\"MC.Models.RefreshCycle.AddSpecificTable(this)\"#=(data.specify_tables ? ' checked=\"checked\"' : '')#>"
                + "<span class=\"label\"></span>"
                + "</label>")
            .HeaderHtmlAttributes(new { @class = "columnBoolean" })
            .HtmlAttributes(new { @class = "columnBoolean" })
            .Title("")
            .Width(75)
            .Sortable(false);

        columns.Bound(model => model.external_name)
            .Title(Resource.MC_Table);

        columns.Bound(model => model.table_group)
            .Title(Resource.MC_TableGroup);

        columns.Bound(model => model.local_name)
            .Title(Resource.MC_EAName);

        columns.Bound(model => model.condition)
            .Title(Resource.MC_Condition)
            .Sortable(false);

        columns.Bound(model => model.delta_download)
            .Title(Resource.MC_Delta)
            .Width(50)
            .Sortable(false)
            .HeaderHtmlAttributes(new { @class = "columnBoolean" })
            .HtmlAttributes(new { @class = "columnBoolean" })
            .ClientTemplate(
                "<label>"
                + "<input name=\"delta_download\" disabled=\"disabled\" type=\"checkbox\"#=(data.delta_download ? ' checked=\"checked\"' : '')#>"
                + "<span class=\"label\"></span>"
                + "</label>"
            );

        columns.Bound(model => model.delta_condition)
            .Title(Resource.MC_DeltaCondition)
            .Sortable(false)
            .ClientTemplate("<span class=\"#= data.delta_download ? 'enableDelta' : 'disableDelta' #\">#= data.delta_condition || '' #</span>");
    })
    .Resizable(resize => resize.Columns(true))
    .Scrollable(scroll => scroll.Virtual(true).Height(gridHeight))
    .DataSource(dataSource => dataSource
        .Ajax().Events(e=>e.RequestStart("onKendoGridPagingStart"))
        .Read(read => read.Action("ReadDownloadTable", "DownloadTable", new { downloadTableUri = ViewBag.DownloadTableUri, keyword = ViewData["Keyword"] }))
        .PageSize(pageSize)
    )
    .EnableCustomBinding(true)
    .AutoBind(false)
)